#!/usr/bin/env ruby
require "readline"

class String

  def colorize(color_code)
    "\e[#{color_code}m#{self}\e[0m"
  end

  def red; self.colorize(31); end
  def green; self.colorize(32); end
  def yellow; self.colorize(33); end

end

def prompt
  "[RuSh] ".yellow + `pwd`.chomp.split("/")[-1] + " => ".green
end

BUILTINS = { }
BUILTINS['cd'] = lambda do | *path |
  path << ENV["HOME"] if path.empty?
  path = path.pop
  path = path.gsub /~/, ENV["HOME"]
  begin
    Dir.chdir path
  rescue Exception
    puts "[RuSh] ".yellow + "no such directory: #{path}".red
  end
end

BUILTINS['exit'] = lambda do | code |
  code ||= 0
  exit(code.to_i)
end

BUILTINS['exec'] = lambda do | *command |
  exec *command
end

trap("INT", 'SIG_IGN') # don't go exiting on me

ENV["PATH"] += ":/usr/local/bin"

while line = Readline.readline(prompt, true)
  command, *arguments = line.split(" ")

  unless line
    prompt
    next
  end

  if BUILTINS[command]
    BUILTINS[command].call(*arguments)
  else
    child_pid = fork do
      begin
        system line
      rescue SystemCallError
        puts "[RuSh] ".yellow + "command not found: #{command}".red
      end
    end
    Process.wait child_pid
  end
end